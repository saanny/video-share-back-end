version: '3.9'
services:
  redis:
    container_name: redis_container
    image: redis:alpine
    restart: always
    ports:
      - '6379:6379'
    command: redis-server --loglevel warning
    volumes:
      - ./docker-volumes/cache:/data
  mongodbCompressVideo:
    container_name: mongodb_compress_video_container
    image: mongo:latest
    restart: always
    ports:
      - 27017:27017
    volumes:
      - ./docker-volumes/data-compress-video:/data/db
  mongodbUploadVideo:
    container_name: mongodb_upload_video_container
    image: mongo:latest
    restart: always
    ports:
      - 27018:27017
    volumes:
      - ./docker-volumes/data-upload-video:/data/db    
  mongodbVideos:
    container_name: mongodb_videos_container
    image: mongo:latest
    restart: always
    ports:
      - 27019:27017
    volumes:
      - ./docker-volumes/data-video:/data/db    
  mongodbNotification:
    container_name: mongodb_notification_container
    image: mongo:latest
    restart: always
    ports:
      - 27020:27017
    volumes:
      - ./docker-volumes/data-notification:/data/db    

  mysqlAuth:
    container_name: mysql_container
    image: mysql
    command: --init-file /data/application/init.sql
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: admintest
      MYSQL_DATABASE: users_auth
      MYSQL_USER: root
      MYSQL_PASSWORD: admintest
    ports:
      - 3306:3306
    volumes:
      - ./init.sql:/data/application/init.sql
      - ./docker-volumes/mysql-auth:/var/lib/mysql

  postgresUser:
    container_name: postgres_user_container
    image: postgres
    restart: always
    environment:
      POSTGRES_PASSWORD: admintest
      POSTGRES_USER: admintest
      POSTGRES_DB: users
    ports:
      - 5432:5432
    volumes:
      - ./docker-volumes/postgresql-user:/var/lib/postgresql
  rabbitmq:
    container_name: rabbitmq_container
    image: rabbitmq:3.13-rc-management-alpine
    restart: always
    ports:
      - 5672:5672
      - 15672:15672
  authservice:
    container_name: auth_container
    build:
      context: ./auth-service
      dockerfile: Dockerfile.dev
    restart: always
    ports: 
      - 9090:9090
    env_file: ./auth-service/.env
    environment:
     - ENABLE_APM=0
     - NODE_ENV=development
     - RABBITMQ_ENDPOINT=amqp://rabbitmq_container:5672
     - GRPC_HOST=localhost:9090
     - MYSQL_DATABASE=users_auth
     - MYSQL_USER=root
     - MYSQL_PASSWORD=admintest
     - MYSQL_HOST=mysql_container